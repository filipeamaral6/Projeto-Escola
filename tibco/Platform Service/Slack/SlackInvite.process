<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx="http://xmlns.example.com/1562168510682" xmlns:pfx2="http://www.tibco.com/schemas/tibco/Schemas/IdOnly.xsd" xmlns:ns="http://www.tibco.com/schemas/tibco/Schemas/Schema.xsd" xmlns:pfx3="http://www.tibco.com/schemas/tibco/Schemas/User.xsd" xmlns:pfx4="http://xmlns.example.com/1561632387170" xmlns:pfx5="http://www.tibco.com/schemas/tibco/Schemas/Employee.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://xmlns.example.com/1561453715358" xmlns:ns1="http://www.tibco.com/schemas/tibco/Schemas/Platforms.xsd" xmlns:ns4="www.tibco.com/plugin/Sleep" xmlns:ns3="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:ns12="http://www.tibco.com/namespaces/tnt/plugins/json">
    <xsd:import namespace="http://www.tibco.com/schemas/tibco/Schemas/Platforms.xsd" schemaLocation="/Schemas/Platforms.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1562168510682" location="/Platform Service/WSDL.wsdl"/>
    <pd:name>Platform Service/Slack/SlackInvite.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx:SlackInviteInput"/>
    <pd:startX>73</pd:startX>
    <pd:startY>301</pd:startY>
    <pd:returnBindings>
        <pfx:SlackInviteOutput>
            <output>
                <ns1:OutputData>
                    <xsl:choose>
                        <xsl:when test="not(exists($Get-Employee-By-Id/root/pfx5:InputData/@id))">
                            <xsl:attribute name="message">
                                <xsl:value-of select="&quot;Error: Employee not found&quot;"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:when test="$Invoke-Slack-Invite/ns12:RESTOutput/msg = '{&quot;ok&quot;:true}'">
                            <xsl:attribute name="message">
                                <xsl:value-of select="&quot;Slack invite was sent succesfully&quot;"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="message">
                                <xsl:value-of select="&quot;Error: There was a problem with the Slack invite. Please invite manually.&quot;"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns1:OutputData>
            </output>
        </pfx:SlackInviteOutput>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:SlackInviteOutput"/>
    <pd:endX>676</pd:endX>
    <pd:endY>370</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1562168628746</pd:targetNamespace>
    <pd:activity name="Get Platforms By Id">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>203</pd:x>
        <pd:y>159</pd:y>
        <config>
            <processName>/Platform Service/Get Platforms By Id/GetPlatformsById.process</processName>
        </config>
        <pd:inputBindings>
            <pfx:GetPlatformsByIdInput>
                <input>
                    <pfx2:InputData>
                        <xsl:if test="$Start/pfx:SlackInviteInput/input/pfx2:InputData/@id">
                            <xsl:attribute name="id">
                                <xsl:value-of select="$Start/pfx:SlackInviteInput/input/pfx2:InputData/@id"/>
                            </xsl:attribute>
                        </xsl:if>
                    </pfx2:InputData>
                </input>
            </pfx:GetPlatformsByIdInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Get Employee By Id">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>200</pd:x>
        <pd:y>300</pd:y>
        <config>
            <processName>/Platform Service/Get Employee By Id/GetEmployeeById.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <id>
                    <xsl:value-of select="$Start/pfx:SlackInviteInput/input/pfx2:InputData/@id"/>
                </id>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke Slack Invite">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>535</pd:x>
        <pd:y>159</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>GET</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <trustAllHostUI>true</trustAllHostUI>
            <OAuth2ParamPosition>Header</OAuth2ParamPosition>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="string" minOccurs="0"/>
                                                    <xsd:element name="content" type="string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="string" minOccurs="0"/>
                                                    <xsd:element name="content" type="base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="string" minOccurs="0"/>
                                                    <xsd:element name="name" type="string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="base64Binary"/>
                                                                <xsd:element name="text" type="string"/>
                                                                <xsd:element name="fileName" type="string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="string" minOccurs="0"/>
                            <xsd:element name="Location" type="string" minOccurs="0"/>
                            <xsd:element name="Allow" type="string" minOccurs="0"/>
                            <xsd:element name="Date" type="string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns12:ActivityInput>
                <URI>
                    <xsl:value-of select="concat(&quot;https://slack.com/api/users.admin.invite?token=&quot;,$_globalVariables/ns3:GlobalVariables/APIs/SlackToken,&#xA;&quot;&amp;email=&quot;,$Get-Employee-By-Id/root/pfx5:InputData/@email)"/>
                </URI>
                <ns12:Parameters>
                    <Query/>
                </ns12:Parameters>
            </ns12:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.TransactionGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>687</pd:x>
        <pd:y>1</pd:y>
        <pd:width>269</pd:width>
        <pd:height>142</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>transactionGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:transactionType>JDBCTransaction</pd:transactionType>
            <pd:includeCheckpoint>false</pd:includeCheckpoint>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Update Platforms</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Data</pd:from>
            <pd:to>Update Platforms</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Update Platforms">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>859</pd:x>
            <pd:y>65</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Database/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>UPDATE EMPLOYEES SET INTRANET=(?), SLACK=(?), OFFICE_365=(?) WHERE ID=(?)</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>INTRANET</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>SLACK</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>OFFICE_365</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <INTRANET>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data/ns1:InputData/@intranet)">
                                <xsl:value-of select="$Map-Data/ns1:InputData/@intranet"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </INTRANET>
                    <SLACK>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data/ns1:InputData/@slack)">
                                <xsl:value-of select="$Map-Data/ns1:InputData/@slack"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </SLACK>
                    <OFFICE_365>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data/ns1:InputData/@office365)">
                                <xsl:value-of select="$Map-Data/ns1:InputData/@office365"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </OFFICE_365>
                    <ID>
                        <xsl:choose>
                            <xsl:when test="exists($Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/ns1:InputData/@id)">
                                <xsl:value-of select="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/ns1:InputData/@id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ID>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map Data">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>767</pd:x>
            <pd:y>67</pd:y>
            <config>
                <element ref="ns1:InputData"/>
            </config>
            <pd:inputBindings>
                <ns1:InputData>
                    <xsl:choose>
                        <xsl:when test="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/ns1:InputData/@intranet  = &quot;true&quot;">
                            <xsl:attribute name="intranet">
                                <xsl:value-of select="1"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="intranet">
                                <xsl:value-of select="0"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:attribute name="slack">
                        <xsl:value-of select="1"/>
                    </xsl:attribute>
                    <xsl:choose>
                        <xsl:when test="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/ns1:InputData/@office365 = &quot;true&quot;">
                            <xsl:attribute name="office365">
                                <xsl:value-of select="1"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="office365">
                                <xsl:value-of select="0"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns1:InputData>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:group name="Group">
        <pd:type>com.tibco.pe.core.LoopGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>973</pd:x>
        <pd:y>146</pd:y>
        <pd:width>329</pd:width>
        <pd:height>227</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>simpleGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Map-Data-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Update-Platforms-1</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map-Data-1</pd:from>
            <pd:to>Update-Platforms-1</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Map-Data-1">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1081</pd:x>
            <pd:y>260</pd:y>
            <config>
                <element ref="ns1:InputData"/>
            </config>
            <pd:inputBindings>
                <ns1:InputData>
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/ns1:InputData/@intranet  = &quot;true&quot;">
                            <xsl:attribute name="intranet">
                                <xsl:value-of select="1"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="intranet">
                                <xsl:value-of select="0"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:attribute xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="slack">
                        <xsl:value-of select="2"/>
                    </xsl:attribute>
                    <xsl:choose xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:when test="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/ns1:InputData/@office365 = &quot;true&quot;">
                            <xsl:attribute name="office365">
                                <xsl:value-of select="1"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="office365">
                                <xsl:value-of select="0"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:if test="$Start/pfx:SlackInviteInput/input/pfx2:InputData/@id">
                        <xsl:attribute name="id">
                            <xsl:value-of select="$Start/pfx:SlackInviteInput/input/pfx2:InputData/@id"/>
                        </xsl:attribute>
                    </xsl:if>
                </ns1:InputData>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Update-Platforms-1">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>1198</pd:x>
            <pd:y>262</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Database/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>UPDATE EMPLOYEES SET INTRANET=(?), SLACK=(?), OFFICE_365=(?) WHERE ID=(?)</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>INTRANET</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>SLACK</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>OFFICE_365</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <INTRANET>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data-1/ns1:InputData/@intranet)">
                                <xsl:value-of select="$Map-Data-1/ns1:InputData/@intranet"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </INTRANET>
                    <SLACK>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data-1/ns1:InputData/@slack)">
                                <xsl:value-of select="$Map-Data-1/ns1:InputData/@slack"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </SLACK>
                    <OFFICE_365>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data-1/ns1:InputData/@office365)">
                                <xsl:value-of select="$Map-Data-1/ns1:InputData/@office365"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </OFFICE_365>
                    <ID>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data-1/ns1:InputData/@id)">
                                <xsl:value-of select="$Map-Data-1/ns1:InputData/@id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ID>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Sleep">
        <pd:type>com.tibco.plugin.timer.SleepActivity</pd:type>
        <pd:resourceType>ae.activities.sleep</pd:resourceType>
        <pd:x>415</pd:x>
        <pd:y>151</pd:y>
        <config/>
        <pd:inputBindings>
            <ns4:SleepInputSchema>
                <IntervalInMillisec>
                    <xsl:value-of select="$_globalVariables/ns3:GlobalVariables/APIs/SlackSendInviteTime"/>
                </IntervalInMillisec>
            </ns4:SleepInputSchema>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="UpdateEmployee">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>320</pd:x>
        <pd:y>152</pd:y>
        <config>
            <processName>/Employee Service/Update Employee/UpdateEmployee.process</processName>
        </config>
        <pd:inputBindings>
            <ns2:UpdateEmployeeInput>
                <input>
                    <pfx5:InputData>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@id">
                            <xsl:attribute name="id">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@id"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@email">
                            <xsl:attribute name="email">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@email"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@personalEmail">
                            <xsl:attribute name="personalEmail">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@personalEmail"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@firstName">
                            <xsl:attribute name="firstName">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@firstName"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@lastName">
                            <xsl:attribute name="lastName">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@lastName"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@username">
                            <xsl:attribute name="username">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@username"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@createdAt">
                            <xsl:attribute name="createdAt">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@createdAt"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:choose>
                            <xsl:when test="$Get-Employee-By-Id/root/pfx5:InputData/@intranet = &quot;true&quot;">
                                <xsl:attribute name="intranet">
                                    <xsl:value-of select="1"/>
                                </xsl:attribute>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="intranet">
                                    <xsl:value-of select="0"/>
                                </xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:attribute name="slack">
                            <xsl:value-of select="3"/>
                        </xsl:attribute>
                        <xsl:choose>
                            <xsl:when test="$Get-Employee-By-Id/root/pfx5:InputData/@office365 = &quot;true&quot;">
                                <xsl:attribute name="office365">
                                    <xsl:value-of select="1"/>
                                </xsl:attribute>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="office365">
                                    <xsl:value-of select="0"/>
                                </xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@startedAt">
                            <xsl:attribute name="startedAt">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@startedAt"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="$Get-Employee-By-Id/root/pfx5:InputData/@status">
                            <xsl:attribute name="status">
                                <xsl:value-of select="$Get-Employee-By-Id/root/pfx5:InputData/@status"/>
                            </xsl:attribute>
                        </xsl:if>
                    </pfx5:InputData>
                </input>
            </ns2:UpdateEmployeeInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Get Employee By Id</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Employee By Id</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Employee By Id</pd:from>
        <pd:to>Get Platforms By Id</pd:to>
        <pd:xpathDescription>user exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Get-Employee-By-Id/root/pfx5:InputData/@id)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Platforms By Id</pd:from>
        <pd:to>UpdateEmployee</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke Slack Invite</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:xpathDescription>IF SUCCESS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Invoke-Slack-Invite/ns12:RESTOutput/msg = '{"ok":true}'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke Slack Invite</pd:from>
        <pd:to>Group</pd:to>
        <pd:xpathDescription>Error</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>starts-with($Invoke-Slack-Invite/ns12:RESTOutput/msg, '{"ok":false')</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Sleep</pd:from>
        <pd:to>Invoke Slack Invite</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>UpdateEmployee</pd:from>
        <pd:to>Sleep</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>