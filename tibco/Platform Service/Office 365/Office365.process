<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:pfx6="http://www.tibco.com/schemas/tibco/Schemas/Office365AssignLicenses.xsd3" xmlns:pfx="http://xmlns.example.com/1562168510682" xmlns:pfx2="http://www.tibco.com/schemas/tibco/Schemas/Platforms.xsd" xmlns:ns="http://www.tibco.com/schemas/tibco/Schemas/Office365.xsd2" xmlns:pfx3="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:pfx4="http://www.tibco.com/schemas/tibco/Schemas/Office365ErrorResponse.xsd2" xmlns:pfx5="http://www.tibco.com/schemas/tibco/Schemas/Schema.xsd2" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns2="http://www.tibco.com/schemas/tibco/Schemas/IdOnly.xsd" xmlns:ns1="http://www.tibco.com/pe/DeployedVarsType" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pd="http://xmlns.tibco.com/bw/process/2003">
    <xsd:import namespace="http://www.tibco.com/schemas/tibco/Schemas/Platforms.xsd" schemaLocation="/Schemas/Platforms.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/tibco/Schemas/Office365ErrorResponse.xsd2" schemaLocation="/Schemas/Office365ErrorResponse.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/tibco/Schemas/Schema.xsd2" schemaLocation="/Schemas/Office365Post.xsd"/>
    <xsd:import namespace="http://www.tibco.com/schemas/tibco/Schemas/Office365AssignLicenses.xsd3" schemaLocation="/Schemas/Office365AssignLicense.xsd"/>
    <wsdl:import namespace="http://xmlns.example.com/1562168510682" location="/Platform Service/WSDL.wsdl"/>
    <pd:name>Platform Service/Office 365/Office365.process</pd:name>
    <pd:startName>Start</pd:startName>
    <pd:startType wsMsgRef="pfx:Office365Input"/>
    <pd:startX>52</pd:startX>
    <pd:startY>454</pd:startY>
    <pd:returnBindings>
        <pfx:Office365Output>
            <output>
                <ns:OutputData>
                    <xsl:choose>
                        <xsl:when test="$Update-Platforms/jdbcUpdateActivityOutput/noOfUpdates > 0">
                            <xsl:attribute name="message">
                                <xsl:value-of select="&quot;Office 365 invite was sent sucessfully&quot;"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:when test="$Parse-JSON/pfx3:ActivityOutputClass/pfx4:root/pfx4:error/@message = &quot;Another object with the same value for property userPrincipalName already exists.&quot;">
                            <xsl:attribute name="message">
                                <xsl:value-of select="&quot;Error: Company email already exists&quot;"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:when test="not(exists($Select-Employee/resultSet/Record))">
                            <xsl:attribute name="message">
                                <xsl:value-of select="&quot;Error: Employee not found&quot;"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="message">
                                <xsl:value-of select="concat(&quot;Error: &quot;,$Parse-JSON/pfx3:ActivityOutputClass/pfx4:root/pfx4:error/@message)"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </ns:OutputData>
            </output>
        </pfx:Office365Output>
    </pd:returnBindings>
    <pd:endName>End</pd:endName>
    <pd:endType wsMsgRef="pfx:Office365Output"/>
    <pd:endX>748</pd:endX>
    <pd:endY>455</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1563189725222</pd:targetNamespace>
    <pd:activity name="Get Platforms By Id">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>231</pd:x>
        <pd:y>146</pd:y>
        <config>
            <processName>/Platform Service/Get Platforms By Id/GetPlatformsById.process</processName>
        </config>
        <pd:inputBindings>
            <pfx:GetPlatformsByIdInput>
                <input>
                    <ns2:InputData>
                        <xsl:if test="$Select-Employee/resultSet/Record[1]/ID">
                            <xsl:attribute name="id">
                                <xsl:value-of select="$Select-Employee/resultSet/Record[1]/ID"/>
                            </xsl:attribute>
                        </xsl:if>
                    </ns2:InputData>
                </input>
            </pfx:GetPlatformsByIdInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Select Employee">
        <pd:type>com.tibco.plugin.jdbc.JDBCQueryActivity</pd:type>
        <pd:resourceType>ae.activities.JDBCQueryActivity</pd:resourceType>
        <pd:x>233</pd:x>
        <pd:y>452</pd:y>
        <config>
            <timeout>10</timeout>
            <commit>false</commit>
            <maxRows>100</maxRows>
            <emptyStrAsNil>false</emptyStrAsNil>
            <statement>SELECT * FROM EMPLOYEES WHERE EMAIL=(?)</statement>
            <jdbcSharedConfig>/Database/JDBC Connection.sharedjdbc</jdbcSharedConfig>
            <Prepared_Param_DataType>
                <parameter>
                    <parameterName>EMAIL</parameterName>
                    <dataType>VARCHAR</dataType>
                </parameter>
            </Prepared_Param_DataType>
            <oraObjects/>
            <oraTables/>
            <QueryOutputCachedSchemaColumns>ID</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-5</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>BIGINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>EMAIL</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>FIRST_NAME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>LAST_NAME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>USERNAME</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>INTRANET</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-7</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TINYINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>SLACK</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-6</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TINYINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>OFFICE_365</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>-7</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>TINYINT</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>CREATED_AT</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DATE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>PERSONAL_EMAIL</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>OptionalElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>STARTED_AT</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>93</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>DATE</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
            <QueryOutputCachedSchemaColumns>STATUS</QueryOutputCachedSchemaColumns>
            <QueryOutputCachedSchemaDataTypes>12</QueryOutputCachedSchemaDataTypes>
            <QueryOutputCachedSchemaDataTypesName>VARCHAR</QueryOutputCachedSchemaDataTypesName>
            <QueryOutputCachedSchemaStatus>RequiredElement</QueryOutputCachedSchemaStatus>
        </config>
        <pd:inputBindings>
            <jdbcQueryActivityInput>
                <EMAIL>
                    <xsl:choose>
                        <xsl:when test="exists($Start/pfx:Office365Input/input/ns:InputData/@userPrincipalName)">
                            <xsl:value-of select="$Start/pfx:Office365Input/input/ns:InputData/@userPrincipalName"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="xsi:nil">true</xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                </EMAIL>
            </jdbcQueryActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke Office 365 API">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>539</pd:x>
        <pd:y>147</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>POST</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <trustAllHostUI>true</trustAllHostUI>
            <richOutputEnableUI>true</richOutputEnableUI>
            <OAuth2ParamPosition>Header</OAuth2ParamPosition>
            <OAuth2TokenName/>
            <OAuth2TokenValue/>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Authorization" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <URI>
                    <xsl:value-of select="&quot;https://graph.microsoft.com/v1.0/users/&quot;"/>
                </URI>
                <pfx3:Parameters>
                    <Header>
                        <Authorization>
                            <xsl:value-of select="concat(&quot;Bearer &quot;,$Start/pfx:Office365Input/input/ns:InputData/@token)"/>
                        </Authorization>
                    </Header>
                    <Body>
                        <Text>
                            <type>
                                <xsl:value-of select="&quot;application/json&quot;"/>
                            </type>
                            <content>
                                <xsl:value-of select="$Render-JSON/pfx3:ActivityOutputClass/jsonString"/>
                            </content>
                        </Text>
                    </Body>
                </pfx3:Parameters>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:group name="Group (1)">
        <pd:type>com.tibco.pe.core.TransactionGroup</pd:type>
        <pd:resourceType>ae.process.group</pd:resourceType>
        <pd:x>964</pd:x>
        <pd:y>155</pd:y>
        <pd:width>416</pd:width>
        <pd:height>217</pd:height>
        <pd:collapsedWidth>57</pd:collapsedWidth>
        <pd:collapsedHeight>70</pd:collapsedHeight>
        <pd:groupVariables/>
        <pd:joinToggle>inherit</pd:joinToggle>
        <config>
            <pd:groupType>transactionGroup</pd:groupType>
            <pd:serializable>false</pd:serializable>
            <pd:transactionType>JDBCTransaction</pd:transactionType>
            <pd:includeCheckpoint>false</pd:includeCheckpoint>
        </config>
        <pd:inputBindings/>
        <pd:expanded>true</pd:expanded>
        <pd:transition>
            <pd:from>start</pd:from>
            <pd:to>Map Data</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Update Platforms</pd:from>
            <pd:to>end</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:transition>
            <pd:from>Map Data</pd:from>
            <pd:to>Update Platforms</pd:to>
            <pd:lineType>Default</pd:lineType>
            <pd:lineColor>-16777216</pd:lineColor>
            <pd:conditionType>always</pd:conditionType>
        </pd:transition>
        <pd:activity name="Update Platforms">
            <pd:type>com.tibco.plugin.jdbc.JDBCUpdateActivity</pd:type>
            <pd:resourceType>ae.activities.JDBCUpdateActivity</pd:resourceType>
            <pd:x>1215</pd:x>
            <pd:y>257</pd:y>
            <config>
                <timeout>10</timeout>
                <commit>false</commit>
                <emptyStrAsNil>false</emptyStrAsNil>
                <jdbcSharedConfig>/Database/JDBC Connection.sharedjdbc</jdbcSharedConfig>
                <statement>UPDATE EMPLOYEES SET INTRANET=(?), SLACK=(?), OFFICE_365=(?) WHERE ID=(?)</statement>
                <Prepared_Param_DataType>
                    <parameter>
                        <parameterName>INTRANET</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>SLACK</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>OFFICE_365</parameterName>
                        <dataType>VARCHAR</dataType>
                    </parameter>
                    <parameter>
                        <parameterName>ID</parameterName>
                        <dataType>INTEGER</dataType>
                    </parameter>
                </Prepared_Param_DataType>
            </config>
            <pd:inputBindings>
                <jdbcUpdateActivityInput>
                    <INTRANET>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data/pfx2:InputData/@intranet)">
                                <xsl:value-of select="$Map-Data/pfx2:InputData/@intranet"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </INTRANET>
                    <SLACK>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data/pfx2:InputData/@slack)">
                                <xsl:value-of select="$Map-Data/pfx2:InputData/@slack"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </SLACK>
                    <OFFICE_365>
                        <xsl:choose>
                            <xsl:when test="exists($Map-Data/pfx2:InputData/@office365)">
                                <xsl:value-of select="$Map-Data/pfx2:InputData/@office365"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </OFFICE_365>
                    <ID>
                        <xsl:choose>
                            <xsl:when test="exists($Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/pfx2:InputData/@id)">
                                <xsl:value-of select="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/pfx2:InputData/@id"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:attribute name="xsi:nil">true</xsl:attribute>
                            </xsl:otherwise>
                        </xsl:choose>
                    </ID>
                </jdbcUpdateActivityInput>
            </pd:inputBindings>
        </pd:activity>
        <pd:activity name="Map Data">
            <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
            <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
            <pd:x>1081</pd:x>
            <pd:y>259</pd:y>
            <config>
                <element ref="pfx2:InputData"/>
            </config>
            <pd:inputBindings>
                <pfx2:InputData>
                    <xsl:if test="$Select-Employee/resultSet/Record[1]/ID">
                        <xsl:attribute name="id">
                            <xsl:value-of select="$Select-Employee/resultSet/Record[1]/ID"/>
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:choose>
                        <xsl:when test="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/pfx2:InputData/@intranet = &quot;true&quot;">
                            <xsl:attribute name="intranet">
                                <xsl:value-of select="1"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="intranet">
                                <xsl:value-of select="0"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                        <xsl:when test="$Get-Platforms-By-Id/pfx:GetPlatformsByIdOutput/output/pfx2:InputData/@slack = &quot;true&quot;">
                            <xsl:attribute name="slack">
                                <xsl:value-of select="1"/>
                            </xsl:attribute>
                        </xsl:when>
                        <xsl:otherwise>
                            <xsl:attribute name="slack">
                                <xsl:value-of select="0"/>
                            </xsl:attribute>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:attribute name="office365">
                        <xsl:value-of select="1"/>
                    </xsl:attribute>
                </pfx2:InputData>
            </pd:inputBindings>
        </pd:activity>
    </pd:group>
    <pd:activity name="Parse JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>677</pd:x>
        <pd:y>228</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ValidateOutputEnable>false</ValidateOutputEnable>
            <ActivityOutputEditor ref="pfx4:root"/>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Invoke-Office-365-API/pfx3:RESTOutput/body/asciiContent"/>
                </jsonString>
            </pfx3:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render JSON">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>381</pd:x>
        <pd:y>137</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor ref="pfx5:root"/>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInputClass>
                <pfx5:root>
                    <xsl:attribute name="accountEnabled">
                        <xsl:value-of select="&quot;true&quot;"/>
                    </xsl:attribute>
                    <xsl:if test="$Start/pfx:Office365Input/input/ns:InputData/@displayName">
                        <xsl:attribute name="displayName">
                            <xsl:value-of select="$Start/pfx:Office365Input/input/ns:InputData/@displayName"/>
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:Office365Input/input/ns:InputData/@mailNickname">
                        <xsl:attribute name="mailNickname">
                            <xsl:value-of select="$Start/pfx:Office365Input/input/ns:InputData/@mailNickname"/>
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:if test="$Start/pfx:Office365Input/input/ns:InputData/@userPrincipalName">
                        <xsl:attribute name="userPrincipalName">
                            <xsl:value-of select="$Start/pfx:Office365Input/input/ns:InputData/@userPrincipalName"/>
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:attribute name="usageLocation">
                        <xsl:value-of select="&quot;PT&quot;"/>
                    </xsl:attribute>
                    <xsl:attribute name="passwordPolicies">
                        <xsl:value-of select="&quot;DisablePasswordExpiration, DisableStrongPassword&quot;"/>
                    </xsl:attribute>
                    <pfx5:passwordProfile>
                        <xsl:attribute name="forceChangePasswordNextSignIn">
                            <xsl:value-of select="&quot;true&quot;"/>
                        </xsl:attribute>
                        <xsl:if test="$Start/pfx:Office365Input/input/ns:InputData/@password">
                            <xsl:attribute name="password">
                                <xsl:value-of select="$Start/pfx:Office365Input/input/ns:InputData/@password"/>
                            </xsl:attribute>
                        </xsl:if>
                    </pfx5:passwordProfile>
                </pfx5:root>
            </pfx3:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke-Office-365-API-1">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>832</pd:x>
        <pd:y>139</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>POST</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <trustAllHostUI>true</trustAllHostUI>
            <richOutputEnableUI>false</richOutputEnableUI>
            <OAuth2ParamPosition>Header</OAuth2ParamPosition>
            <OAuth2TokenName/>
            <OAuth2TokenValue/>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Authorization" type="xsd:string" minOccurs="0"/>
                                        <xsd:element name="Content-Type" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInput>
                <URI>
                    <xsl:value-of select="concat(&quot;https://graph.microsoft.com/v1.0/users/&quot;,$Start/pfx:Office365Input/input/ns:InputData/@userPrincipalName,&quot;/assignLicense&quot;)"/>
                </URI>
                <pfx3:Parameters>
                    <Header>
                        <Authorization>
                            <xsl:value-of select="concat(&quot;Bearer &quot;,$Start/pfx:Office365Input/input/ns:InputData/@token)"/>
                        </Authorization>
                        <Content-Type>
                            <xsl:value-of select="&quot;application/json&quot;"/>
                        </Content-Type>
                    </Header>
                    <Body>
                        <Text>
                            <type>
                                <xsl:value-of select="&quot;application/json&quot;"/>
                            </type>
                            <content>
                                <xsl:value-of select="concat(substring-before($Render-JSON-1/pfx3:ActivityOutputClass/jsonString, '&quot;#####&quot;'),&#xA;substring-before(substring-after($Render-JSON-1/pfx3:ActivityOutputClass/jsonString, '&quot;#####&quot;'),'&quot;#####&quot;'),&#xA;substring-after(substring-after($Render-JSON-1/pfx3:ActivityOutputClass/jsonString, '&quot;#####&quot;'),'&quot;#####&quot;')&#xA;)"/>
                            </content>
                        </Text>
                    </Body>
                </pfx3:Parameters>
            </pfx3:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render-JSON-1">
        <pd:type>com.tibco.plugin.json.activities.JSONRenderActivity</pd:type>
        <pd:resourceType>ae.activities.JSONRenderActivity</pd:resourceType>
        <pd:x>677</pd:x>
        <pd:y>66</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <removeRootElementForInput>true</removeRootElementForInput>
            <ActivityInputEditor ref="pfx6:root"/>
        </config>
        <pd:inputBindings>
            <pfx3:ActivityInputClass>
                <xsl:variable name="varx" select="'#####'"/>
                <pfx6:root>
                    <pfx6:addLicenses>
                        <xsl:attribute name="skuId">
                            <xsl:value-of select="$_globalVariables/ns1:GlobalVariables/APIs/Office365LicenseId"/>
                        </xsl:attribute>
                        <pfx6:disabledPlans>
                            <xsl:value-of select="$varx"/>
                        </pfx6:disabledPlans>
                    </pfx6:addLicenses>
                    <pfx6:removeLicenses>
                        <xsl:value-of select="$varx"/>
                    </pfx6:removeLicenses>
                </pfx6:root>
            </pfx3:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Start</pd:from>
        <pd:to>Select Employee</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Select Employee</pd:from>
        <pd:to>Get Platforms By Id</pd:to>
        <pd:xpathDescription>exists</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>exists($Select-Employee/resultSet/Record)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Get Platforms By Id</pd:from>
        <pd:to>Render JSON</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke Office 365 API</pd:from>
        <pd:to>Render-JSON-1</pd:to>
        <pd:xpathDescription>SUCCESS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Invoke-Office-365-API/pfx3:RESTOutput/StatusCode = 201</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Group (1)</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke Office 365 API</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:xpathDescription>ERROR</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not($Invoke-Office-365-API/pfx3:RESTOutput/StatusCode = 201)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse JSON</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render JSON</pd:from>
        <pd:to>Invoke Office 365 API</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Select Employee</pd:from>
        <pd:to>End</pd:to>
        <pd:xpathDescription>ERROR</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not(exists($Select-Employee/resultSet/Record))</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke-Office-365-API-1</pd:from>
        <pd:to>Group (1)</pd:to>
        <pd:xpathDescription>SUCCESS</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$Invoke-Office-365-API-1/pfx3:RESTOutput/StatusCode = 200</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke-Office-365-API-1</pd:from>
        <pd:to>Parse JSON</pd:to>
        <pd:xpathDescription>ERROR</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>not($Invoke-Office-365-API-1/pfx3:RESTOutput/StatusCode = 200)</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Render-JSON-1</pd:from>
        <pd:to>Invoke-Office-365-API-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>